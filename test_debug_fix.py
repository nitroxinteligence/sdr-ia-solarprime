#!/usr/bin/env python3
"""
Teste espec√≠fico para verificar se a corre√ß√£o do par√¢metro debug funcionou.
"""

import sys
from pathlib import Path
import os

# Adicionar o diret√≥rio do projeto ao path
sys.path.insert(0, str(Path(__file__).parent))

def test_agno_agent_initialization():
    """Testa se o AGnO Agent inicializa sem erro de par√¢metro debug"""
    print("üß™ Testando inicializa√ß√£o do AGnO Agent sem par√¢metro debug...")
    
    try:
        # Set mock environment variables
        mock_vars = {
            'GEMINI_API_KEY': 'test_key',
            'SUPABASE_URL': 'http://test',
            'SUPABASE_SERVICE_KEY': 'test_key',
            'EVOLUTION_API_URL': 'http://test',
            'EVOLUTION_API_KEY': 'test_key',
            'KOMMO_SUBDOMAIN': 'test',
            'KOMMO_LONG_LIVED_TOKEN': 'test',
            'GOOGLE_SERVICE_ACCOUNT_EMAIL': 'test@test.com',
            'GOOGLE_PRIVATE_KEY': 'test_key',
            'DEBUG': 'True'
        }
        
        for key, value in mock_vars.items():
            os.environ[key] = value
        
        from agente.core.agent import SDRAgent
        
        print("‚úÖ Importa√ß√£o bem-sucedida!")
        
        # Try to create agent
        agent = SDRAgent()
        print("‚úÖ SDRAgent inicializado com sucesso!")
        print(f"   - Agent name: {agent.name}")
        print("‚úÖ CORRE√á√ÉO DO PAR√ÇMETRO debug FUNCIONOU!")
        
        return True
        
    except TypeError as e:
        if "unexpected keyword argument 'debug'" in str(e):
            print("‚ùå Erro: Ainda est√° passando par√¢metro debug inv√°lido")
            print(f"   Erro: {e}")
            return False
        else:
            print(f"‚ùå Erro de tipo diferente: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """Executa teste da corre√ß√£o do par√¢metro debug"""
    print("üöÄ Teste de Corre√ß√£o do Par√¢metro debug")
    print("=" * 50)
    
    if test_agno_agent_initialization():
        print("\nüéâ CORRE√á√ÉO DO PAR√ÇMETRO debug CONCLU√çDA COM SUCESSO!")
        print("üîß Problema original: Agent.__init__() got an unexpected keyword argument 'debug'")
        print("‚úÖ Solu√ß√£o aplicada: Removido par√¢metro 'debug=DEBUG' da inicializa√ß√£o do Agent")
        print("üìù Arquivo corrigido: agente/core/agent.py linha 265")
        print("\nüöÄ O sistema agora pode ser iniciado sem erros de par√¢metro debug!")
        return True
    else:
        print("\n‚ö†Ô∏è  A corre√ß√£o n√£o foi bem-sucedida.")
        return False

if __name__ == "__main__":
    main()