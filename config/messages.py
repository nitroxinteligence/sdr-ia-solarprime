"""
Mensagens Humanizadas - Helen Vieira
=====================================
CentralizaÃ§Ã£o de todas as mensagens do sistema
com tom natural e acolhedor da consultora Helen
"""

import random
from typing import List, Dict, Optional
from datetime import datetime

class HumanizedMessages:
    """Mensagens humanizadas para a Helen Vieira"""
    
    # Mensagens de erro tÃ©cnico - mais naturais e menos robÃ³ticas
    ERRO_TECNICO = [
        "Opa, me perdi um pouquinho aqui ğŸ˜Š Pode repetir, por favor?",
        "Nossa, acho que me confundi... Vamos tentar de novo?",
        "Hmm, deixa eu organizar melhor aqui... Pode me dizer novamente?",
        "Xiii, travou alguma coisa aqui do meu lado... Me dÃ¡ um segundinho?",
        "Eita, preciso de uma ajudinha sua... Pode reformular a pergunta?",
        "Desculpa, acho que nÃ£o captei direito... Pode explicar de outro jeito?",
        "Opa, tive um pequeno contratempo aqui... Vamos recomeÃ§ar?",
        "Me confundi aqui ğŸ˜… Pode me ajudar repetindo?",
        "Parece que algo nÃ£o funcionou como esperado... Tentamos de novo?"
    ]
    
    # Mensagens para processamento de imagens
    ERRO_IMAGEM = [
        "A foto chegou meio escurinha aqui... Consegue tirar outra com mais luz? O flash ajuda bastante! ğŸ“¸",
        "Parece que o WhatsApp comprimiu demais a imagem... Tenta enviar como documento, fica melhor!",
        "A imagem nÃ£o veio muito nÃ­tida... Pode tirar outra foto focando bem na conta? ğŸ“±",
        "Hmm, nÃ£o consegui ver direito os nÃºmeros... Uma foto mais de perto ajudaria!",
        "A qualidade da imagem ficou baixa na transmissÃ£o... Vamos tentar de novo?",
        "NÃ£o consegui ler alguns dados da conta na foto... Pode mandar outra mais clarinha?",
        "Opa, a imagem chegou cortada aqui... Tenta enquadrar a conta inteira na foto!"
    ]
    
    # Mensagens para processamento de PDFs
    ERRO_PDF = [
        "O PDF estÃ¡ pesadinho para abrir... Uma foto da conta funciona super bem tambÃ©m! Que tal? ğŸ“±",
        "Hmm, nÃ£o consegui abrir o PDF direito... Ã€s vezes uma foto simples da conta resolve melhor!",
        "O arquivo PDF estÃ¡ demorando para processar... Que tal enviar uma foto? Ã‰ mais rÃ¡pido! ğŸ“¸",
        "Parece que o PDF estÃ¡ com algum problema... Uma foto da primeira pÃ¡gina jÃ¡ me ajuda muito!",
        "Tive dificuldade com o PDF... Mas se vocÃª tirar uma foto da conta, consigo analisar na hora!",
        "O PDF nÃ£o quer colaborar comigo hoje ğŸ˜… Manda uma foto que eu analiso rapidinho!"
    ]
    
    # Mensagens para processamento de Ã¡udio
    ERRO_AUDIO = [
        "O Ã¡udio chegou cortado aqui... Que tal me contar por mensagem? Respondo rapidinho! ğŸ’¬",
        "Parece que teve uma interferÃªncia no Ã¡udio... Pode digitar? Assim nÃ£o perdemos nada!",
        "NÃ£o consegui entender direito o Ã¡udio... Me escreve que fica mais fÃ¡cil de eu te ajudar! ğŸ˜Š",
        "O Ã¡udio veio com chiado... Pode me mandar por texto? Prometo responder rÃ¡pido!",
        "Hmm, o som nÃ£o ficou muito claro... Que tal escrever? Assim garanto que entendo tudo!",
        "Tive problema para ouvir o Ã¡udio... Mas se digitar, respondo na mesma hora!"
    ]
    
    # Mensagens de fallback por estÃ¡gio - mÃºltiplas variaÃ§Ãµes
    FALLBACK_POR_ESTAGIO = {
        "INITIAL_CONTACT": [
            "Oi! Sou a Helen da Solar Prime ğŸ˜Š Estava organizando umas coisas aqui, mas jÃ¡ estou com vocÃª! Como posso te chamar?",
            "OlÃ¡! Helen Vieira aqui, da Solar Prime! Desculpa a demora, estava finalizando outro atendimento. Qual seu nome?",
            "Oii! Aqui Ã© a Helen da Solar Prime! Tive um pequeno delay aqui, mas agora estou 100% com vocÃª! Como prefere ser chamado?",
            "Opa! Helen aqui ğŸ‘‹ Me desculpe a espera, jÃ¡ estou disponÃ­vel! Antes de tudo, como Ã© seu nome?",
            "OlÃ¡! Sou a Helen, consultora da Solar Prime! Pequeno contratempo resolvido, vamos conversar? Me diz seu nome!"
        ],
        
        "IDENTIFICATION": [
            "{name}, mil perdÃµes pela pausa! Agora sim, me conta: vocÃª quer economizar na conta ou instalar painÃ©is solares?",
            "Desculpa {name}! Precisei resolver uma coisinha rÃ¡pida. EntÃ£o, seu interesse Ã© economia ou usina prÃ³pria?",
            "{name}, voltei! ğŸ˜Š Agora me diz: estÃ¡ buscando reduzir a conta de luz ou quer sua prÃ³pria usina?",
            "Oi {name}, desculpe a demora! Vamos lÃ¡: vocÃª prefere economizar na conta atual ou ter energia solar prÃ³pria?",
            "Eita {name}, me perdoa! Agora estou 100% aqui. Me conta qual sua necessidade com energia solar?"
        ],
        
        "QUALIFICATION": [
            "Ops, me distraÃ­ aqui! ğŸ˜… Mas vamos ao que interessa: me conta qual o valor da sua conta de luz?",
            "{name}, desculpa! Precisei resolver uma coisinha aqui. Agora me diz: quanto vocÃª paga de energia por mÃªs?",
            "Mil perdÃµes pela pausa! Estava calculando umas economias aqui... Falando nisso, qual o valor da sua conta?",
            "{name}, voltei! Agora sim, para eu preparar sua proposta: qual o valor mÃ©dio da conta de luz?",
            "Desculpe a interrupÃ§Ã£o! Vamos continuar: me passa o valor aproximado da sua fatura de energia?"
        ],
        
        "DISCOVERY": [
            "Opa, me perdi aqui! ğŸ˜… {name}, vocÃª jÃ¡ tem algum desconto na conta de luz atualmente?",
            "Desculpe {name}! Voltando... VocÃª jÃ¡ recebe algum benefÃ­cio ou desconto na energia?",
            "{name}, mil perdÃµes! Agora me conta: tem algum desconto ou benefÃ­cio na sua conta hoje?",
            "Eita, pequena pausa tÃ©cnica! ğŸ˜Š {name}, vocÃª jÃ¡ tem alguma economia na conta de luz?",
            "Voltei {name}! Me diz uma coisa: sua conta jÃ¡ tem algum tipo de desconto?"
        ],
        
        "SCHEDULING": [
            "Desculpe {name}! Estava verificando a agenda... Temos estes horÃ¡rios:\n\n*Segunda*: 10h ou 14h\n*TerÃ§a*: 9h ou 16h\n\nQual prefere?",
            "{name}, perdÃ£o pela espera! Consultei os horÃ¡rios disponÃ­veis:\n\n*AmanhÃ£*: 11h ou 15h\n*Quinta*: 10h ou 14h\n\nQual fica melhor?",
            "Opa, demorei verificando a agenda! Tenho estes horÃ¡rios:\n\n*Quarta*: 9h ou 13h\n*Sexta*: 10h ou 15h\n\nQual combina melhor?",
            "Mil desculpas {name}! Os horÃ¡rios disponÃ­veis sÃ£o:\n\n*Segunda*: 11h ou 16h\n*TerÃ§a*: 9h ou 14h\n\nPode ser algum destes?",
            "{name}, voltei com os horÃ¡rios! Temos:\n\n*AmanhÃ£*: 10h ou 15h\n*Depois*: 9h ou 14h\n\nQual encaixa melhor pra vocÃª?"
        ],
        
        "NURTURING": [
            "Oi {name}! Lembrei de vocÃª e vim ver se ainda precisa economizar na conta de luz ğŸ˜Š",
            "{name}, passando para saber se repensou sobre aquela economia que conversamos!",
            "E aÃ­ {name}? Ainda com interesse em reduzir a conta de luz? Estou por aqui!",
            "OlÃ¡ {name}! Voltei para ver se posso te ajudar com a economia de energia!",
            "{name}, oi! Aquela conta de luz continua pesando? Podemos resolver isso!"
        ]
    }
    
    # Mensagens de follow-up mais naturais
    FOLLOW_UP_TEMPLATES = {
        "30_minutos": [
            "Oi {name}! Vi que paramos nossa conversa no meio... Tudo bem aÃ­? ğŸ˜Š",
            "{name}, ficou alguma dÃºvida sobre o que conversamos? Estou por aqui!",
            "E aÃ­, {name}? Nossa conversa ficou pela metade... Posso ajudar em algo?",
            "{name}, percebi que vocÃª sumiu... Aconteceu alguma coisa? Continuo disponÃ­vel!",
            "Opa {name}! Acho que perdemos a conexÃ£o... Quer continuar de onde paramos?"
        ],
        
        "24_horas": [
            "{name}, passando pra ver se vocÃª teve tempo de pensar sobre aquela economia... Qualquer dÃºvida, sÃ³ chamar!",
            "Oi {name}! Lembrei da nossa conversa ontem... Se precisar de mais informaÃ§Ãµes, me avisa!",
            "{name}, boa tarde! Se ainda tiver interesse naquela economia que falamos, estou Ã  disposiÃ§Ã£o ğŸ˜Š",
            "E aÃ­ {name}? Conseguiu conversar com a famÃ­lia sobre a proposta? Fico no aguardo!",
            "{name}, ontem ficou alguma dÃºvida? Estou aqui para esclarecer o que precisar!"
        ],
        
        "48_horas": [
            "{name}, oi! Ainda dÃ¡ tempo de aproveitar aquela economia que conversamos... Que tal?",
            "OlÃ¡ {name}! Passaram 2 dias e vim ver se repensou sobre reduzir a conta de luz ğŸ˜Š",
            "{name}, lembra de mim? Helen da Solar Prime! Ainda posso te ajudar com a economia!",
            "Oi {name}! Aquela proposta de economia ainda estÃ¡ de pÃ©... Vamos conversar?",
            "{name}, voltei! ğŸ˜Š Se quiser retomar nossa conversa sobre economia, Ã© sÃ³ chamar!"
        ],
        
        "7_dias": [
            "{name}, uma semana se passou... Ainda tempo de comeÃ§ar a economizar! Vamos conversar?",
            "Oi {name}! Lembra da economia na conta de luz? A oportunidade continua disponÃ­vel!",
            "{name}, boa tarde! Passando para ver se mudou de ideia sobre a energia solar ğŸ˜Š",
            "E aÃ­ {name}? Aquela conta de luz continua alta? Ainda posso te ajudar!",
            "{name}, oi! Uma semana depois e a oferta de economia continua valendo!"
        ]
    }
    
    # Mensagens para situaÃ§Ãµes especÃ­ficas
    SITUACOES_ESPECIAIS = {
        "multiplas_mensagens": [
            "{name}, recebi vÃ¡rias mensagens suas! ğŸ˜Š Vou responder tudo juntinho, tÃ¡?",
            "Opa, chegou um montÃ£o de mensagens! Me dÃ¡ um segundinho para ler tudo, {name}!",
            "{name}, vi que mandou vÃ¡rias coisas! JÃ¡ li tudo e vou te responder!",
            "Eita, quantas mensagens! ğŸ˜… Calma {name}, jÃ¡ processei tudo!"
        ],
        
        "comando_clear": [
            "Prontinho {name}! Conversa limpa, comeÃ§amos do zero! Como posso ajudar?",
            "Tudo limpo! ğŸ§¹ Vamos recomeÃ§ar nossa conversa, {name}?",
            "Feito! HistÃ³rico apagado. Em que posso te ajudar hoje, {name}?",
            "Conversa resetada com sucesso! O que deseja saber sobre energia solar?"
        ],
        
        "horario_comercial": [
            "Oi {name}! Vi sua mensagem. Como Ã© fora do horÃ¡rio comercial, te respondo amanhÃ£ cedo, tÃ¡? ğŸ˜Š",
            "{name}, recebi sua mensagem! AmanhÃ£ pela manhÃ£ te respondo com toda atenÃ§Ã£o!",
            "Opa {name}! Mensagem recebida. Te retorno amanhÃ£ no primeiro horÃ¡rio!",
            "Oi {name}! Anotei aqui. AmanhÃ£ cedinho continuo nosso papo!"
        ],
        
        "agradecimento": [
            "Por nada, {name}! ğŸ˜Š Estou aqui pra isso!",
            "Imagine, {name}! Foi um prazer ajudar!",
            "Que isso, {name}! Fico feliz em poder ajudar!",
            "Sempre Ã s ordens, {name}! ğŸ’š"
        ]
    }
    
    @staticmethod
    def get_random_message(category: str, subcategory: Optional[str] = None) -> str:
        """Retorna uma mensagem aleatÃ³ria da categoria especificada"""
        if subcategory:
            messages = getattr(HumanizedMessages, category, {}).get(subcategory, [])
        else:
            messages = getattr(HumanizedMessages, category, [])
        
        if not messages:
            return "Opa, algo nÃ£o saiu como esperado... Vamos tentar de novo?"
        
        return random.choice(messages)
    
    @staticmethod
    def get_fallback_by_stage(stage: str, name: str = "") -> str:
        """Retorna uma mensagem fallback apropriada para o estÃ¡gio"""
        messages = HumanizedMessages.FALLBACK_POR_ESTAGIO.get(stage, [])
        if not messages:
            messages = HumanizedMessages.FALLBACK_POR_ESTAGIO["INITIAL_CONTACT"]
        
        message = random.choice(messages)
        return message.format(name=name) if "{name}" in message else message
    
    @staticmethod
    def get_follow_up(interval: str, name: str) -> str:
        """Retorna uma mensagem de follow-up humanizada"""
        messages = HumanizedMessages.FOLLOW_UP_TEMPLATES.get(interval, [])
        if not messages:
            return f"Oi {name}! Ainda posso te ajudar com economia na conta de luz?"
        
        return random.choice(messages).format(name=name)
    
    @staticmethod
    def get_time_aware_greeting() -> str:
        """Retorna uma saudaÃ§Ã£o baseada no horÃ¡rio"""
        hour = datetime.now().hour
        
        if 5 <= hour < 12:
            greetings = ["Bom dia!", "Opa, bom dia!", "OlÃ¡, bom dia!"]
        elif 12 <= hour < 18:
            greetings = ["Boa tarde!", "Oi, boa tarde!", "OlÃ¡, boa tarde!"]
        else:
            greetings = ["Boa noite!", "Oi, boa noite!", "OlÃ¡, boa noite!"]
        
        return random.choice(greetings)
    
    @staticmethod
    def personalize_error(error_type: str, name: str = "", context: Dict = None) -> str:
        """Personaliza mensagem de erro com contexto"""
        base_message = HumanizedMessages.get_random_message(error_type)
        
        # Adiciona nome se disponÃ­vel
        if name and "{name}" not in base_message:
            base_message = f"{name}, {base_message.lower()}"
        elif name:
            base_message = base_message.format(name=name)
        
        # Adiciona contexto temporal se for tarde da noite
        hour = datetime.now().hour
        if hour >= 22 or hour < 6:
            base_message += " JÃ¡ estÃ¡ tarde, mas prometo resolver isso rapidinho!"
        
        return base_message

# Aliases para facilitar imports
ERROR_MESSAGES = HumanizedMessages.ERRO_TECNICO
IMAGE_ERRORS = HumanizedMessages.ERRO_IMAGEM
PDF_ERRORS = HumanizedMessages.ERRO_PDF
AUDIO_ERRORS = HumanizedMessages.ERRO_AUDIO
FALLBACK_MESSAGES = HumanizedMessages.FALLBACK_POR_ESTAGIO
FOLLOW_UP_MESSAGES = HumanizedMessages.FOLLOW_UP_TEMPLATES
SPECIAL_SITUATIONS = HumanizedMessages.SITUACOES_ESPECIAIS

# FunÃ§Ãµes helper
get_error_message = HumanizedMessages.get_random_message
get_fallback_message = HumanizedMessages.get_fallback_by_stage
get_follow_up_message = HumanizedMessages.get_follow_up
get_greeting = HumanizedMessages.get_time_aware_greeting
personalize_message = HumanizedMessages.personalize_error

def get_special_message(situation: str, name: str = "") -> str:
    """Retorna uma mensagem especial humanizada"""
    messages = HumanizedMessages.SITUACOES_ESPECIAIS.get(situation, [])
    if not messages:
        return "Opa, algo nÃ£o saiu como esperado... Vamos tentar de novo?"
    
    message = random.choice(messages)
    return message.format(name=name) if "{name}" in message else message

__all__ = [
    "HumanizedMessages",
    "ERROR_MESSAGES",
    "IMAGE_ERRORS", 
    "PDF_ERRORS",
    "AUDIO_ERRORS",
    "FALLBACK_MESSAGES",
    "FOLLOW_UP_MESSAGES",
    "SPECIAL_SITUATIONS",
    "get_error_message",
    "get_fallback_message",
    "get_follow_up_message",
    "get_greeting",
    "personalize_message",
    "get_special_message"
]