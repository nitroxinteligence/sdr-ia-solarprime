# =============================================================================
# SDR IA SolarPrime - Configuração Nginx para Produção
# =============================================================================
# Coloque este arquivo em: /etc/nginx/sites-available/sdr-solarprime
# Depois crie link simbólico: ln -s /etc/nginx/sites-available/sdr-solarprime /etc/nginx/sites-enabled/
# =============================================================================

# Configuração upstream para load balancing (se usar múltiplas instâncias)
upstream sdr_backend {
    server localhost:8000 fail_timeout=0;
    # Adicione mais servidores aqui se necessário:
    # server localhost:8001 fail_timeout=0;
    # server localhost:8002 fail_timeout=0;
    
    # Configurações de keep-alive
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name api.seudominio.com.br;
    
    # Permitir validação do Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirecionar todo o resto para HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.seudominio.com.br;
    
    # Certificados SSL (serão configurados pelo certbot)
    ssl_certificate /etc/letsencrypt/live/api.seudominio.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.seudominio.com.br/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.seudominio.com.br/chain.pem;
    
    # Configuração SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 1.1.1.1 valid=300s;
    resolver_timeout 5s;
    
    # SSL Session
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Logs
    access_log /var/log/nginx/sdr-solarprime.access.log combined buffer=16k flush=5s;
    error_log /var/log/nginx/sdr-solarprime.error.log warn;
    
    # Tamanho máximo de upload (para arquivos de mídia do WhatsApp)
    client_max_body_size 64M;
    client_body_buffer_size 128k;
    
    # Timeouts gerais
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    
    # Compressão Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;
    
    # Webhook endpoint - Configuração especial para Evolution API
    location /webhook/ {
        # Rate limiting específico para webhooks
        limit_req zone=webhook_limit burst=50 nodelay;
        
        # Headers para proxy
        proxy_pass http://sdr_backend/webhook/;
        proxy_http_version 1.1;
        
        # Headers importantes
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Headers para keep-alive
        proxy_set_header Connection "";
        
        # Timeouts maiores para webhooks
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Desabilitar buffering para webhooks
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Logs específicos para webhooks
        access_log /var/log/nginx/sdr-webhook.access.log combined;
        error_log /var/log/nginx/sdr-webhook.error.log notice;
    }
    
    # Health check endpoint (sem logs para não poluir)
    location /health {
        proxy_pass http://sdr_backend/health;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
        
        # Cache do health check
        proxy_cache_valid 200 5s;
        proxy_cache_bypass $http_pragma $http_authorization;
    }
    
    # API endpoints gerais
    location /api/ {
        # Rate limiting para API
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://sdr_backend/api/;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Keep-alive
        proxy_set_header Connection "";
        
        # Timeouts padrão
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Documentação (se usar Swagger/ReDoc)
    location /docs {
        proxy_pass http://sdr_backend/docs;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /redoc {
        proxy_pass http://sdr_backend/redoc;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Arquivos estáticos (se houver)
    location /static/ {
        alias /home/ubuntu/sdr-solarprime/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Favicon
    location /favicon.ico {
        access_log off;
        log_not_found off;
        return 204;
    }
    
    # Robots.txt
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }
    
    # Endpoint raiz
    location / {
        proxy_pass http://sdr_backend/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Bloquear acesso a arquivos sensíveis
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /\.env {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Configuração para monitoramento local (opcional)
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}