#!/usr/bin/env python3
"""
Teste espec√≠fico para verificar apenas a inicializa√ß√£o do AGnO Agent.
"""

import sys
from pathlib import Path
import os

# Adicionar o diret√≥rio do projeto ao path
sys.path.insert(0, str(Path(__file__).parent))

def test_agno_agent_direct():
    """Testa apenas a inicializa√ß√£o do AGnO Agent diretamente"""
    print("üß™ Testando inicializa√ß√£o direta do AGnO Agent...")
    
    try:
        os.environ['GEMINI_API_KEY'] = 'test_key'
        
        from agno.agent import Agent
        from agno.models.google import Gemini
        
        # Create Gemini model
        model = Gemini(
            id="gemini-2.0-flash-exp",
            api_key="test_key",
            temperature=0.7,
            max_output_tokens=2048,
            top_p=0.9
        )
        
        # Test Agent creation without debug parameter
        agent = Agent(
            name="Test Agent",
            model=model,
            tools=[],  # Empty tools for testing
            show_tool_calls=True,
            reasoning=False,
            storage=False,
            memory=False,
            instructions="Test instructions"
            # No debug parameter!
        )
        
        print("‚úÖ AGnO Agent criado com sucesso sem par√¢metro debug!")
        print(f"   - Agent name: {agent.name}")
        print("‚úÖ CORRE√á√ÉO DO PAR√ÇMETRO debug CONFIRMADA!")
        
        return True
        
    except TypeError as e:
        if "unexpected keyword argument 'debug'" in str(e):
            print("‚ùå Erro: Ainda est√° passando par√¢metro debug inv√°lido")
            print(f"   Erro: {e}")
            return False
        else:
            print(f"‚ùå Erro de tipo diferente: {e}")
            return False
            
    except Exception as e:
        # For any other error (like API key issues), we still consider the debug fix successful
        if "unexpected keyword argument 'debug'" not in str(e):
            print("‚úÖ Par√¢metro debug corrigido (outros erros s√£o independentes)")
            print(f"   Erro n√£o relacionado ao debug: {e}")
            return True
        else:
            print(f"‚ùå Erro relacionado ao debug: {e}")
            return False

def main():
    """Executa teste focado no par√¢metro debug"""
    print("üöÄ Teste Espec√≠fico do Par√¢metro debug AGnO")
    print("=" * 50)
    
    if test_agno_agent_direct():
        print("\nüéâ CORRE√á√ÉO DO PAR√ÇMETRO debug CONCLU√çDA COM SUCESSO!")
        print("üîß Problema original: Agent.__init__() got an unexpected keyword argument 'debug'")
        print("‚úÖ Solu√ß√£o aplicada: Removido par√¢metro 'debug=DEBUG' da inicializa√ß√£o do Agent")
        print("üìù Arquivo corrigido: agente/core/agent.py")
        print("\nüöÄ O AGnO Agent agora pode ser inicializado sem erros de par√¢metro debug!")
        return True
    else:
        print("\n‚ö†Ô∏è  A corre√ß√£o n√£o foi bem-sucedida.")
        return False

if __name__ == "__main__":
    main()